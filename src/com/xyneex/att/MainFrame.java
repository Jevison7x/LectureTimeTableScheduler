/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xyneex.att;

import com.thoughtworks.xstream.XStream;
import com.xyneex.att.beans.Course;
import com.xyneex.att.beans.Day;
import com.xyneex.att.beans.Schedule;
import com.xyneex.att.beans.Venue;
import com.xyneex.att.courses.CoursesDAO;
import com.xyneex.att.courses.CoursesListDialog;
import com.xyneex.att.departments.Department;
import com.xyneex.att.util.Printer;
import com.xyneex.att.util.ScheduleClashingException;
import com.xyneex.att.util.WindowsSetter;
import com.xyneex.att.venues.VenueDAO;
import com.xyneex.att.venues.VenuesListDialog;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Jevison7x
 */
public class MainFrame extends javax.swing.JFrame
{
    private Department department;

    private TimeTable timeTable;

    private Course[] coursesArr;

    private boolean notSaved;

    public MainFrame(Department department) throws ClassNotFoundException, IOException, SQLException
    {
        this.department = department;
        this.initTimeTable();
        this.initCoursesArr();
        this.initComponents();
        this.centralizeWindow();
        this.fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Object Files", "obj"));
        this.fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("XML Files", "xml"));
    }

    private void initTimeTable()
    {
        Day[] daysArr = new Day[]
        {
            new Day(Day.MONDAY), new Day(Day.TUESDAY), new Day(Day.WEDNESDAY), new Day(Day.THURSDAY), new Day(Day.FRIDAY)
        };
        List<Day> days = Arrays.asList(daysArr);
        this.timeTable = new TimeTable(department, days);
    }

    private void initCoursesArr() throws ClassNotFoundException, IOException, SQLException
    {
        List<Course> courses = CoursesDAO.getCoursesBySemester(this.department);
        this.coursesArr = new Course[courses.size()];
        this.coursesArr = courses.toArray(coursesArr);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        fileChooser = new javax.swing.JFileChooser();
        createNewTimeTableBtn = new javax.swing.JButton();
        toolBar1 = new javax.swing.JToolBar();
        openTimeTableBtn = new javax.swing.JButton();
        saveTimeTableBtn = new javax.swing.JButton();
        venuesListBtn = new javax.swing.JButton();
        coursesListBtn = new javax.swing.JButton();
        appDetailsBtn = new javax.swing.JButton();
        printBtn = new javax.swing.JButton();
        closeExitBtn = new javax.swing.JButton();
        mainScrollPane = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        universityNameLbl = new javax.swing.JLabel();
        sessionSemesterLbl = new javax.swing.JLabel();
        departmentNameLbl = new javax.swing.JLabel();
        timeTableLbl = new javax.swing.JLabel();
        instructionsPanel = new javax.swing.JPanel();
        instructionsLbl = new javax.swing.JLabel();
        subDeanLbl = new javax.swing.JLabel();
        hodLbl = new javax.swing.JLabel();
        deptNameLbl = new javax.swing.JLabel();
        allLecturersLbl = new javax.swing.JLabel();
        noticeBoardLbl = new javax.swing.JLabel();
        timeTableOfficerLbl1 = new javax.swing.JLabel();
        timeTableOfficerLbl2 = new javax.swing.JLabel();
        toolBar2 = new javax.swing.JToolBar();
        manualScheduleBtn = new javax.swing.JButton();
        editScheduleBtn = new javax.swing.JButton();
        autoScheduleBtn = new javax.swing.JButton();
        setSeminerPeriodBtn = new javax.swing.JButton();
        clearTimeTable = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        selectCourseCB = new javax.swing.JComboBox(this.coursesArr);
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        printMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        venuesListMenuItem = new javax.swing.JMenuItem();
        coursesListMenuItem = new javax.swing.JMenuItem();
        appDetailsMenuItem = new javax.swing.JMenuItem();
        editScheduleMenuItem = new javax.swing.JMenuItem();
        actionsMenu = new javax.swing.JMenu();
        manualScheduleMenuItem = new javax.swing.JMenuItem();
        automaticScheduleMenuItem = new javax.swing.JMenuItem();
        setSeminarPeriodMenuItem = new javax.swing.JMenuItem();
        clearTimeTableMenuItem = new javax.swing.JMenuItem();

        fileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        fileChooser.setDialogTitle("Save Time Table");

        createNewTimeTableBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        createNewTimeTableBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Add_file_32.png"))); // NOI18N
        createNewTimeTableBtn.setText("Create New Time Table");
        createNewTimeTableBtn.setFocusable(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        toolBar1.setFloatable(false);
        toolBar1.setRollover(true);

        openTimeTableBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        openTimeTableBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/open131.png"))); // NOI18N
        openTimeTableBtn.setText("Open Time Table");
        openTimeTableBtn.setFocusable(false);
        openTimeTableBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                openTimeTableBtnActionPerformed(evt);
            }
        });
        toolBar1.add(openTimeTableBtn);

        saveTimeTableBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveTimeTableBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Save_Disk_32.png"))); // NOI18N
        saveTimeTableBtn.setText("Save Time Table");
        saveTimeTableBtn.setFocusable(false);
        saveTimeTableBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveTimeTableBtnActionPerformed(evt);
            }
        });
        toolBar1.add(saveTimeTableBtn);

        venuesListBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        venuesListBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Location_pin_32.png"))); // NOI18N
        venuesListBtn.setText("Venues List");
        venuesListBtn.setFocusable(false);
        venuesListBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                venuesListBtnActionPerformed(evt);
            }
        });
        toolBar1.add(venuesListBtn);

        coursesListBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        coursesListBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/List_of_Works_32.png"))); // NOI18N
        coursesListBtn.setText("Courses List");
        coursesListBtn.setFocusable(false);
        coursesListBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                coursesListBtnActionPerformed(evt);
            }
        });
        toolBar1.add(coursesListBtn);

        appDetailsBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        appDetailsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Client_profile_32.png"))); // NOI18N
        appDetailsBtn.setText("Set App Details");
        appDetailsBtn.setFocusable(false);
        toolBar1.add(appDetailsBtn);

        printBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        printBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Printer_tool_32.png"))); // NOI18N
        printBtn.setText("Print Time Table");
        printBtn.setFocusable(false);
        printBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                printBtnActionPerformed(evt);
            }
        });
        toolBar1.add(printBtn);

        closeExitBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        closeExitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Door_exit_with_arrow_to_the_right_32.png"))); // NOI18N
        closeExitBtn.setText("Close/Exit");
        closeExitBtn.setFocusable(false);
        closeExitBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                closeExitBtnActionPerformed(evt);
            }
        });
        toolBar1.add(closeExitBtn);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));

        universityNameLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        universityNameLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        universityNameLbl.setText(this.department.getUniversityName().toUpperCase());

        sessionSemesterLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        sessionSemesterLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sessionSemesterLbl.setText(this.department.getSession()+" LECTURE TIME TABLE ("+department.getSemester()+")");

        departmentNameLbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        departmentNameLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        departmentNameLbl.setText(this.department.getDepartmentName().toUpperCase());

        timeTableLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeTableLbl.setText(this.timeTable.generateHTML());
        timeTableLbl.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        instructionsPanel.setBackground(new java.awt.Color(255, 255, 255));

        instructionsLbl.setText("<html>\n\t<span>\n\t\tLecturers are advice to adhere strictly to their respective venue and time. Free periods in the timetable can only be given out by the time table officer on special request from<br> lecturers whose credit hours are not completed\n\t</span>\n</html>");

        subDeanLbl.setText("Sub Dean");

        hodLbl.setText("HOD,");

        deptNameLbl.setText(this.department.getDepartmentName());

        allLecturersLbl.setText("All Lecturers in "+this.department.getDepartmentName());

        noticeBoardLbl.setText("Notice Board");

        timeTableOfficerLbl1.setText(this.department.getTimeTableOfficer());

        timeTableOfficerLbl2.setText("Time Table Officer");

        javax.swing.GroupLayout instructionsPanelLayout = new javax.swing.GroupLayout(instructionsPanel);
        instructionsPanel.setLayout(instructionsPanelLayout);
        instructionsPanelLayout.setHorizontalGroup(
            instructionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(instructionsLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 1173, Short.MAX_VALUE)
            .addGroup(instructionsPanelLayout.createSequentialGroup()
                .addGroup(instructionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(instructionsPanelLayout.createSequentialGroup()
                        .addComponent(hodLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deptNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(allLecturersLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subDeanLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(noticeBoardLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(215, 215, 215)
                .addGroup(instructionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(timeTableOfficerLbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeTableOfficerLbl2, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        instructionsPanelLayout.setVerticalGroup(
            instructionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instructionsPanelLayout.createSequentialGroup()
                .addComponent(instructionsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subDeanLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(instructionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hodLbl)
                    .addComponent(deptNameLbl)
                    .addComponent(timeTableOfficerLbl1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(instructionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allLecturersLbl)
                    .addComponent(timeTableOfficerLbl2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(noticeBoardLbl))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(instructionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timeTableLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 1034, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sessionSemesterLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(universityNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(departmentNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(universityNameLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sessionSemesterLbl)
                .addGap(1, 1, 1)
                .addComponent(departmentNameLbl)
                .addGap(18, 18, 18)
                .addComponent(timeTableLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(instructionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainScrollPane.setViewportView(mainPanel);

        toolBar2.setFloatable(false);
        toolBar2.setRollover(true);

        manualScheduleBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        manualScheduleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Male_cartoon_pointing_to_white_board_32.png"))); // NOI18N
        manualScheduleBtn.setText("Manual Schedule");
        manualScheduleBtn.setFocusable(false);
        manualScheduleBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                manualScheduleBtnActionPerformed(evt);
            }
        });
        toolBar2.add(manualScheduleBtn);

        editScheduleBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        editScheduleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Pen_on_square_of_paper_interface_symbol_32.png"))); // NOI18N
        editScheduleBtn.setText("Edit Schedule");
        editScheduleBtn.setFocusable(false);
        toolBar2.add(editScheduleBtn);

        autoScheduleBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        autoScheduleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Time_planning_32.png"))); // NOI18N
        autoScheduleBtn.setText("Automatic Schedule");
        autoScheduleBtn.setFocusable(false);
        autoScheduleBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                autoScheduleBtnActionPerformed(evt);
            }
        });
        toolBar2.add(autoScheduleBtn);

        setSeminerPeriodBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        setSeminerPeriodBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Marketing_Seminar_32.png"))); // NOI18N
        setSeminerPeriodBtn.setText("Set Seminar Period");
        setSeminerPeriodBtn.setFocusable(false);
        setSeminerPeriodBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                setSeminerPeriodBtnActionPerformed(evt);
            }
        });
        toolBar2.add(setSeminerPeriodBtn);

        clearTimeTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clearTimeTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/gtk-refresh.png"))); // NOI18N
        clearTimeTable.setText("Clear Time Table");
        clearTimeTable.setFocusable(false);
        clearTimeTable.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                clearTimeTableActionPerformed(evt);
            }
        });
        toolBar2.add(clearTimeTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("             Highlight Courses: ");
        toolBar2.add(jLabel1);

        selectCourseCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                selectCourseCBActionPerformed(evt);
            }
        });
        toolBar2.add(selectCourseCB);

        fileMenu.setText("File");

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        printMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        printMenuItem.setText("Print");
        fileMenu.add(printMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setText("Close/Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");

        venuesListMenuItem.setText("Venues List");
        editMenu.add(venuesListMenuItem);

        coursesListMenuItem.setText("Courses List");
        editMenu.add(coursesListMenuItem);

        appDetailsMenuItem.setText("App Details");
        editMenu.add(appDetailsMenuItem);

        editScheduleMenuItem.setText("Edit Schedule");
        editMenu.add(editScheduleMenuItem);

        menuBar.add(editMenu);

        actionsMenu.setText("Actions");

        manualScheduleMenuItem.setText("Manual Schedule");
        actionsMenu.add(manualScheduleMenuItem);

        automaticScheduleMenuItem.setText("Automatic Schedule");
        actionsMenu.add(automaticScheduleMenuItem);

        setSeminarPeriodMenuItem.setText("Set Seminar Period");
        setSeminarPeriodMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                setSeminarPeriodMenuItemActionPerformed(evt);
            }
        });
        actionsMenu.add(setSeminarPeriodMenuItem);

        clearTimeTableMenuItem.setText("Clear Time Table");
        clearTimeTableMenuItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                clearTimeTableMenuItemActionPerformed(evt);
            }
        });
        actionsMenu.add(clearTimeTableMenuItem);

        menuBar.add(actionsMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(toolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1099, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void coursesListBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_coursesListBtnActionPerformed
    {//GEN-HEADEREND:event_coursesListBtnActionPerformed
        if(evt.getSource() == this.coursesListBtn)
            try
            {
                List<Course> courses = CoursesDAO.getAllCourses(department);
                CoursesListDialog coursesListDialog = new CoursesListDialog(this, courses);
                coursesListDialog.setVisible(true);
            }
            catch(Exception xcp)
            {
                JOptionPane.showMessageDialog(this, xcp.getMessage(), "There was an Error", JOptionPane.ERROR_MESSAGE);
                xcp.printStackTrace(System.err);
            }
    }//GEN-LAST:event_coursesListBtnActionPerformed

    private void venuesListBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_venuesListBtnActionPerformed
    {//GEN-HEADEREND:event_venuesListBtnActionPerformed
        if(evt.getSource() == this.venuesListBtn)
            try
            {
                List<Venue> venues = VenueDAO.getAllVenues();
                VenuesListDialog vld = new VenuesListDialog(this, venues);
                vld.setVisible(true);
            }
            catch(Exception xcp)
            {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this, xcp.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
                xcp.printStackTrace(System.err);
            }
    }//GEN-LAST:event_venuesListBtnActionPerformed

    private void manualScheduleBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_manualScheduleBtnActionPerformed
    {//GEN-HEADEREND:event_manualScheduleBtnActionPerformed
        if(evt.getSource() == this.manualScheduleBtn)
            try
            {
                ManualScheduleDialog msd = new ManualScheduleDialog(this);
                msd.setVisible(true);
            }
            catch(Exception xcp)
            {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this, xcp.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
                xcp.printStackTrace(System.err);
            }
    }//GEN-LAST:event_manualScheduleBtnActionPerformed

    private void saveTimeTable()
    {
        int returnVal = this.fileChooser.showSaveDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            File file = this.fileChooser.getSelectedFile();
            File newFile = null;
            String fileName = file.getName();
            if(!fileName.contains(".") && this.fileChooser.getFileFilter() instanceof FileNameExtensionFilter)
            {
                FileNameExtensionFilter filter = (FileNameExtensionFilter)this.fileChooser.getFileFilter();
                newFile = new File(file.getPath() + "." + (filter.getExtensions())[0]);
                fileName = newFile.getName();
                System.out.println(fileName);
            }
            else
            {
                newFile = file;
                System.out.println(newFile.getName());
            }
            System.out.println(newFile.getAbsolutePath());
            try(FileWriter fw = new FileWriter(newFile.getAbsoluteFile());
                    BufferedWriter bw = new BufferedWriter(fw);
                    PrintWriter out = new PrintWriter(bw);)
            {
                XStream xStream = new XStream();
                String xml = xStream.toXML(this.timeTable);
                out.print(xml);
                this.setNotSaved(true);
            }
            catch(IOException xcp)
            {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this, xcp.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
                xcp.printStackTrace(System.err);
            }
        }
    }

    private void saveTimeTableBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveTimeTableBtnActionPerformed
    {//GEN-HEADEREND:event_saveTimeTableBtnActionPerformed
        if(evt.getSource() == this.saveTimeTableBtn)
            this.saveTimeTable();
    }//GEN-LAST:event_saveTimeTableBtnActionPerformed

    private void openTimeTableBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_openTimeTableBtnActionPerformed
    {//GEN-HEADEREND:event_openTimeTableBtnActionPerformed
        if(evt.getSource() == this.openTimeTableBtn)
        {
            int returnValue = this.fileChooser.showOpenDialog(this);
            if(returnValue == JFileChooser.APPROVE_OPTION)
            {
                File file = this.fileChooser.getSelectedFile();
                try(FileInputStream fstream = new FileInputStream(file.getAbsolutePath());
                        DataInputStream in = new DataInputStream(fstream);)
                {
                    byte[] data = new byte[in.available()];
                    in.read(data);
                    String xml = new String(data);
                    XStream xstream = new XStream();
                    TimeTable timeTableLocal = (TimeTable)xstream.fromXML(xml);
                    this.timeTable = timeTableLocal;
                    timeTableLbl.setText(this.timeTable.generateHTML());
                }
                catch(IOException xcp)
                {
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(this, xcp.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
                    xcp.printStackTrace(System.err);
                }
            }
        }
    }//GEN-LAST:event_openTimeTableBtnActionPerformed

    private void autoScheduleBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_autoScheduleBtnActionPerformed
    {//GEN-HEADEREND:event_autoScheduleBtnActionPerformed
        if(evt.getSource() == this.autoScheduleBtn)
            try
            {
                this.timeTable.scheduleAutomatically();
                this.timeTableLbl.setText(this.timeTable.generateHTML());
            }
            catch(SQLException | IOException | ClassNotFoundException xcp)
            {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this, xcp.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
                xcp.printStackTrace(System.err);
            }
    }//GEN-LAST:event_autoScheduleBtnActionPerformed

    private void setSeminarPeriod()
    {
        SetSeminarPeriodDialog sspd = new SetSeminarPeriodDialog(this);
        sspd.setVisible(true);
    }

    private void setSeminerPeriodBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setSeminerPeriodBtnActionPerformed
    {//GEN-HEADEREND:event_setSeminerPeriodBtnActionPerformed
        if(evt.getSource() == this.setSeminerPeriodBtn)
            this.setSeminarPeriod();
    }//GEN-LAST:event_setSeminerPeriodBtnActionPerformed

    private void clearTimeTable()
    {
        Toolkit.getDefaultToolkit().beep();
        int q = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to clear the Time Table?",
                "Please Confirm", JOptionPane.YES_NO_OPTION);
        if(q == JOptionPane.YES_OPTION)
        {
            this.initTimeTable();
            this.timeTableLbl.setText(this.timeTable.generateHTML());
        }
    }

    private void clearTimeTableActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearTimeTableActionPerformed
    {//GEN-HEADEREND:event_clearTimeTableActionPerformed
        if(evt.getSource() == this.clearTimeTable)
            this.clearTimeTable();
    }//GEN-LAST:event_clearTimeTableActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_exitMenuItemActionPerformed
    {//GEN-HEADEREND:event_exitMenuItemActionPerformed
        if(evt.getSource() == this.exitMenuItem)
            this.closeExitApplication();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void closeExitApplication()
    {
        if(this.notSaved)
        {
            Toolkit.getDefaultToolkit().beep();
            int q = JOptionPane.showConfirmDialog(this,
                    "Do you want to save changes made to the Time Table?",
                    "Please Confirm", JOptionPane.YES_NO_OPTION);
            if(q == JOptionPane.YES_OPTION)
            {
                this.saveTimeTable();
                System.exit(0);
            }
            else if(q == JOptionPane.NO_OPTION)
                System.exit(0);
        }
    }

    private void closeExitBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_closeExitBtnActionPerformed
    {//GEN-HEADEREND:event_closeExitBtnActionPerformed
        if(evt.getSource() == this.closeExitBtn)
            this.closeExitApplication();
    }//GEN-LAST:event_closeExitBtnActionPerformed

    private void selectCourseCBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectCourseCBActionPerformed
    {//GEN-HEADEREND:event_selectCourseCBActionPerformed
        if(evt.getSource() == this.selectCourseCB)
        {
            Course course = (Course)this.selectCourseCB.getSelectedItem();
            String courseCode = course.getCourseCode();
            this.timeTableLbl.setText(this.timeTable.highlightCourse(courseCode));
        }
    }//GEN-LAST:event_selectCourseCBActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_printBtnActionPerformed
    {//GEN-HEADEREND:event_printBtnActionPerformed
        if(evt.getSource() == this.printBtn)
        {
            PrinterJob pj = PrinterJob.getPrinterJob();
            pj.setJobName("Automated Time Table Printing");
            pj.setPrintable(new Printable()
            {
                @Override
                public int print(Graphics pg, PageFormat pf, int pageNum)
                {
                    if(pageNum > 0)
                        return Printable.NO_SUCH_PAGE;

                    Graphics2D g2 = (Graphics2D)pg;
                    g2.translate(pf.getImageableX(), pf.getImageableY());
                    double sx = pf.getImageableWidth() / MainFrame.this.mainPanel.getWidth();
                    double sy = pf.getImageableHeight() / MainFrame.this.mainPanel.getHeight();
                    MainFrame.this.mainPanel.paintAll(g2);
                    return Printable.PAGE_EXISTS;
                }
            });
            pj.setPrintable(new Printer(MainFrame.this.mainPanel));
            if(pj.printDialog() == false)
                return;
            try
            {
                pj.print();
            }
            catch(PrinterException xcp)
            {
                xcp.printStackTrace(System.err);
            }
        }
    }//GEN-LAST:event_printBtnActionPerformed

    private void clearTimeTableMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_clearTimeTableMenuItemActionPerformed
    {//GEN-HEADEREND:event_clearTimeTableMenuItemActionPerformed
        if(evt.getSource() == this.clearTimeTable)
            this.clearTimeTable();
    }//GEN-LAST:event_clearTimeTableMenuItemActionPerformed

    private void setSeminarPeriodMenuItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setSeminarPeriodMenuItemActionPerformed
    {//GEN-HEADEREND:event_setSeminarPeriodMenuItemActionPerformed
        if(evt.getSource() == this.setSeminarPeriodMenuItem)
            this.setSeminarPeriod();
    }//GEN-LAST:event_setSeminarPeriodMenuItemActionPerformed

    public void addFixedSchedule(Schedule schedule, String strDay, String timePeriod) throws ScheduleClashingException
    {
        if(this.timeTable.addFixedSchedule(schedule, strDay, timePeriod))
            this.timeTableLbl.setText(this.timeTable.generateHTML());
        else
            throw new IllegalArgumentException("There was an unidentified error!");
    }

    public void fixSeminarSchedule(String strDay, String strTimePeriod) throws ScheduleClashingException
    {
        if(this.timeTable.fixSeminarPeriod(strDay, strTimePeriod))
        {
            JOptionPane.showMessageDialog(this, "The seminar period has been added successfully!", "Info", JOptionPane.INFORMATION_MESSAGE);
            this.timeTableLbl.setText(this.timeTable.generateHTML());
        }
        else
            JOptionPane.showMessageDialog(this, "The seminar period could not be added to this period, there was an error!", "Error!", JOptionPane.ERROR_MESSAGE);
    }

    public boolean autoSubstitution(String dayStr, String timePeriod, Schedule schedule1, Schedule schedule2)
    {
        if(this.timeTable.autoSubstitution(dayStr, timePeriod, schedule1, schedule2))
        {
            this.timeTableLbl.setText(this.timeTable.generateHTML());
            return true;
        }
        else
            return false;
    }

    public void setNotSaved(boolean b)
    {
        this.notSaved = true;
    }

    public Department getDepartment()
    {
        return this.department;
    }

    private void centralizeWindow()
    {
        WindowsSetter.centralizeWindow(this);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu actionsMenu;
    private javax.swing.JLabel allLecturersLbl;
    private javax.swing.JButton appDetailsBtn;
    private javax.swing.JMenuItem appDetailsMenuItem;
    private javax.swing.JButton autoScheduleBtn;
    private javax.swing.JMenuItem automaticScheduleMenuItem;
    private javax.swing.JButton clearTimeTable;
    private javax.swing.JMenuItem clearTimeTableMenuItem;
    private javax.swing.JButton closeExitBtn;
    private javax.swing.JButton coursesListBtn;
    private javax.swing.JMenuItem coursesListMenuItem;
    private javax.swing.JButton createNewTimeTableBtn;
    private javax.swing.JLabel departmentNameLbl;
    private javax.swing.JLabel deptNameLbl;
    private javax.swing.JMenu editMenu;
    private javax.swing.JButton editScheduleBtn;
    private javax.swing.JMenuItem editScheduleMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel hodLbl;
    private javax.swing.JLabel instructionsLbl;
    private javax.swing.JPanel instructionsPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JButton manualScheduleBtn;
    private javax.swing.JMenuItem manualScheduleMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel noticeBoardLbl;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JButton openTimeTableBtn;
    private javax.swing.JButton printBtn;
    private javax.swing.JMenuItem printMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton saveTimeTableBtn;
    private javax.swing.JComboBox selectCourseCB;
    private javax.swing.JLabel sessionSemesterLbl;
    private javax.swing.JMenuItem setSeminarPeriodMenuItem;
    private javax.swing.JButton setSeminerPeriodBtn;
    private javax.swing.JLabel subDeanLbl;
    private javax.swing.JLabel timeTableLbl;
    private javax.swing.JLabel timeTableOfficerLbl1;
    private javax.swing.JLabel timeTableOfficerLbl2;
    private javax.swing.JToolBar toolBar1;
    private javax.swing.JToolBar toolBar2;
    private javax.swing.JLabel universityNameLbl;
    private javax.swing.JButton venuesListBtn;
    private javax.swing.JMenuItem venuesListMenuItem;
    // End of variables declaration//GEN-END:variables

}
