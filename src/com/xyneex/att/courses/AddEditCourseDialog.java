/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xyneex.att.courses;

import com.xyneex.att.MainFrame;
import com.xyneex.att.beans.Course;
import com.xyneex.att.beans.Venue;
import com.xyneex.att.departments.Department;
import com.xyneex.att.util.WindowsSetter;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.NavigableSet;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Jevison7x
 */
public class AddEditCourseDialog extends JDialog
{
    private VenuePanel venuePanel;

    private CoursesListDialog coursesListDialog;

    private boolean editing;

    private String formerCourseCode;

    private int selectedRow;

    /**
     * Creates new form DepartmentCourses
     */
    public AddEditCourseDialog(CoursesListDialog coursesListDialog) throws SQLException
    {
        super((MainFrame)coursesListDialog.getParent(), true);
        this.coursesListDialog = coursesListDialog;
        this.venuePanel = new VenuePanel();
        this.initComponents();
        this.centralizeWindow();
    }

    public AddEditCourseDialog(CoursesListDialog coursesListDialog, Course course, int selectedRow) throws SQLException
    {
        super((MainFrame)coursesListDialog.getParent(), true);
        this.coursesListDialog = coursesListDialog;
        this.selectedRow = selectedRow;
        this.venuePanel = new VenuePanel();
        this.initComponents();
        this.setFormerData(course);
        this.centralizeWindow();
        this.setEditing(true);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        mainPanel = new javax.swing.JPanel();
        headerLbl = new javax.swing.JLabel();
        courseYearLbl = new javax.swing.JLabel();
        courseCodeLbl = new javax.swing.JLabel();
        courseCodeTF = new javax.swing.JTextField();
        courseTitleLbl = new javax.swing.JLabel();
        courseTitleTF = new javax.swing.JTextField();
        creditHourLbl = new javax.swing.JLabel();
        creditHourTF = new javax.swing.JTextField();
        saveBtn = new javax.swing.JButton();
        cancelBnt = new javax.swing.JButton();
        venueJPanel = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        selectAllBtn = new javax.swing.JButton();
        unselectAllBtn = new javax.swing.JButton();
        courseYearCB = new javax.swing.JComboBox();
        borrowedCourseChk = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        semesterCB = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        headerLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headerLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Add_file_32.png"))); // NOI18N
        headerLbl.setText("Departmental Courses");

        courseYearLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        courseYearLbl.setText("Course Year:");

        courseCodeLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        courseCodeLbl.setText("Course Code:");

        courseTitleLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        courseTitleLbl.setText("Course Title:");

        creditHourLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        creditHourLbl.setText("Credit Hours:");

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveBtnActionPerformed(evt);
            }
        });

        cancelBnt.setText("Cancel");
        cancelBnt.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelBntActionPerformed(evt);
            }
        });

        venueJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select the posible venues for this course", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jCheckBox1.setText("jCheckBox1");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                itemState(evt);
            }
        });

        jCheckBox2.setText("jCheckBox2");

        jCheckBox3.setText("jCheckBox3");

        jCheckBox4.setText("jCheckBox4");

        jCheckBox5.setText("jCheckBox4");

        jCheckBox6.setText("jCheckBox1");

        jCheckBox7.setText("jCheckBox2");

        jCheckBox8.setText("jCheckBox3");

        jCheckBox9.setText("jCheckBox4");

        jCheckBox10.setText("jCheckBox3");

        jCheckBox11.setText("jCheckBox1");

        jCheckBox12.setText("jCheckBox2");

        javax.swing.GroupLayout venueJPanelLayout = new javax.swing.GroupLayout(venueJPanel);
        venueJPanel.setLayout(venueJPanelLayout);
        venueJPanelLayout.setHorizontalGroup(
            venueJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(venueJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(venueJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(venueJPanelLayout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(39, 39, 39)
                        .addComponent(jCheckBox2)
                        .addGap(51, 51, 51)
                        .addComponent(jCheckBox3)
                        .addGap(36, 36, 36)
                        .addComponent(jCheckBox4))
                    .addGroup(venueJPanelLayout.createSequentialGroup()
                        .addComponent(jCheckBox6)
                        .addGap(39, 39, 39)
                        .addComponent(jCheckBox7)
                        .addGap(51, 51, 51)
                        .addComponent(jCheckBox8)
                        .addGap(36, 36, 36)
                        .addComponent(jCheckBox5))
                    .addGroup(venueJPanelLayout.createSequentialGroup()
                        .addComponent(jCheckBox11)
                        .addGap(39, 39, 39)
                        .addComponent(jCheckBox12)
                        .addGap(51, 51, 51)
                        .addComponent(jCheckBox10)
                        .addGap(36, 36, 36)
                        .addComponent(jCheckBox9)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        venueJPanelLayout.setVerticalGroup(
            venueJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(venueJPanelLayout.createSequentialGroup()
                .addGroup(venueJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(venueJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox8)
                    .addComponent(jCheckBox5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(venueJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox11)
                    .addComponent(jCheckBox12)
                    .addComponent(jCheckBox10)
                    .addComponent(jCheckBox9))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        venueJPanel = this.venuePanel;

        selectAllBtn.setText("Select All");
        selectAllBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                selectAllBtnActionPerformed(evt);
            }
        });

        unselectAllBtn.setText("Unselect All");
        unselectAllBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                unselectAllBtnActionPerformed(evt);
            }
        });

        courseYearCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "Year 1", "Year 2", "Year 3", "Year 4", "Year 5", "Year 6" }));

        borrowedCourseChk.setText("Borrowed Course");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Semester:");

        semesterCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--", "FIRST SEMESTER", "SECOND SEMESTER" }));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(selectAllBtn)
                        .addGap(27, 27, 27)
                        .addComponent(unselectAllBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelBnt))
                    .addComponent(venueJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(headerLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(creditHourLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(courseTitleLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(courseCodeLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                    .addComponent(courseYearLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(courseTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseCodeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(creditHourTF, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(borrowedCourseChk))
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(semesterCB, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(courseYearCB, javax.swing.GroupLayout.Alignment.LEADING, 0, 145, Short.MAX_VALUE)))
                .addGap(76, 76, 76))
        );

        mainPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {selectAllBtn, unselectAllBtn});

        mainPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelBnt, saveBtn});

        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseYearLbl)
                    .addComponent(courseYearCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(semesterCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseCodeLbl)
                    .addComponent(courseCodeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseTitleLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creditHourLbl)
                    .addComponent(creditHourTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borrowedCourseChk))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(venueJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(cancelBnt)
                    .addComponent(selectAllBtn)
                    .addComponent(unselectAllBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setFormerData(Course course)
    {
        this.courseYearCB.setSelectedItem(course.getYearOfStudy());
        this.semesterCB.setSelectedItem(course.getSemester());
        this.courseCodeTF.setText(course.getCourseCode());
        this.courseTitleTF.setText(course.getCourseTile());
        this.creditHourTF.setText(String.valueOf(course.getCreditHours()));
        if(!course.isDepartmental())
            this.borrowedCourseChk.setSelected(true);
        this.venuePanel.setSelectedVenues(course.getPosibleVenues());
        this.formerCourseCode = course.getCourseCode();
    }

    public boolean isEditing()
    {
        return editing;
    }

    private void setEditing(boolean editing)
    {
        this.editing = editing;
    }

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveBtnActionPerformed
    {//GEN-HEADEREND:event_saveBtnActionPerformed
        if(evt.getSource() == this.saveBtn)
        {
            MainFrame mainFrame = (MainFrame)this.getParent();
            Department department = mainFrame.getDepartment();
            String courseYear = this.courseYearCB.getSelectedItem().toString();
            String semester = this.semesterCB.getSelectedItem().toString();
            String courseCode = this.courseCodeTF.getText().toUpperCase().trim();
            String courseTitle = this.courseTitleTF.getText().toUpperCase().trim();
            String creditHours = this.creditHourTF.getText().trim();
            boolean departmental = !this.borrowedCourseChk.isSelected();
            int departmentID = department.getId();
            NavigableSet<Venue> venues = this.venuePanel.getSelectedVenues();

            if(courseYear.equals("--Select--"))
                JOptionPane.showMessageDialog(this, "Please select the course year", "Error!", JOptionPane.ERROR_MESSAGE);
            else if(semester.equals("--Select--"))
                JOptionPane.showMessageDialog(this, "Please select the semester for this course", "Error!", JOptionPane.ERROR_MESSAGE);
            else if(courseCode.length() == 0)
                JOptionPane.showMessageDialog(this, "Please input the course code", "Error!", JOptionPane.ERROR_MESSAGE);
            else if(courseTitle.length() == 0)
                JOptionPane.showMessageDialog(this, "Please input the course title", "Error!", JOptionPane.ERROR_MESSAGE);
            else if(creditHours.length() == 0)
                JOptionPane.showMessageDialog(this, "Please input the credit hour", "Error!", JOptionPane.ERROR_MESSAGE);
            else if(venues.isEmpty())
                JOptionPane.showMessageDialog(this, "Please select at least one venue", "Error!", JOptionPane.ERROR_MESSAGE);
            else
                try
                {
                    Course course = new Course();
                    course.setCourseCode(courseCode);
                    course.setCourseTile(courseTitle);
                    course.setCreditHours(Integer.parseInt(creditHours));
                    course.setYearOfStudy(courseYear);
                    course.setSemester(semester);
                    course.setDepartmentID(departmentID);
                    course.setDepartmental(departmental);
                    course.setPosibleVenues(venues);
                    if(this.isEditing())
                    {
                        if(CoursesDAO.updateCourse(course, this.formerCourseCode))
                        {
                            Toolkit.getDefaultToolkit().beep();
                            JOptionPane.showMessageDialog(this, "The Course '" + courseCode + "' was updated successfully!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                            this.dispose();
                            this.coursesListDialog.refreshTable();
                            this.coursesListDialog.selectRow(this.selectedRow);
                        }
                    }
                    else if(CoursesDAO.insertCourse(course))
                    {
                        Toolkit.getDefaultToolkit().beep();
                        JOptionPane.showMessageDialog(this, "The Course was inserted successfully!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                        this.dispose();
                        this.coursesListDialog.refreshTable();
                        this.coursesListDialog.tableChanged();
                    }
                }
                catch(NumberFormatException xcp)
                {
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(this, "Please input a valid integer for the credit hour", "Error!", JOptionPane.ERROR_MESSAGE);
                }
                catch(IOException | SQLException xcp)
                {
                    if(xcp instanceof SQLIntegrityConstraintViolationException)
                    {
                        Toolkit.getDefaultToolkit().beep();
                        JOptionPane.showMessageDialog(this, "The course code " + courseCode + " already exists", "Error!", JOptionPane.ERROR_MESSAGE);
                    }
                    else
                    {
                        Toolkit.getDefaultToolkit().beep();
                        JOptionPane.showMessageDialog(this, xcp.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
                        xcp.printStackTrace(System.err);
                    }
                }
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void cancelBntActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelBntActionPerformed
    {//GEN-HEADEREND:event_cancelBntActionPerformed
        if(evt.getSource() == this.cancelBnt)
            this.dispose();
    }//GEN-LAST:event_cancelBntActionPerformed

    private void itemState(java.awt.event.ItemEvent evt)//GEN-FIRST:event_itemState
    {//GEN-HEADEREND:event_itemState
        System.out.println("Im Selected");
    }//GEN-LAST:event_itemState

    private void selectAllBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectAllBtnActionPerformed
    {//GEN-HEADEREND:event_selectAllBtnActionPerformed
        if(evt.getSource() == this.selectAllBtn)
            this.venuePanel.selectAllVenues();
    }//GEN-LAST:event_selectAllBtnActionPerformed

    private void unselectAllBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_unselectAllBtnActionPerformed
    {//GEN-HEADEREND:event_unselectAllBtnActionPerformed
        if(evt.getSource() == this.unselectAllBtn)
            this.venuePanel.unselectAllVenues();
    }//GEN-LAST:event_unselectAllBtnActionPerformed

    private void centralizeWindow()
    {
        WindowsSetter.centralizeWindow(this);
    }

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox borrowedCourseChk;
    private javax.swing.JButton cancelBnt;
    private javax.swing.JLabel courseCodeLbl;
    private javax.swing.JTextField courseCodeTF;
    private javax.swing.JLabel courseTitleLbl;
    private javax.swing.JTextField courseTitleTF;
    private javax.swing.JComboBox courseYearCB;
    private javax.swing.JLabel courseYearLbl;
    private javax.swing.JLabel creditHourLbl;
    private javax.swing.JTextField creditHourTF;
    private javax.swing.JLabel headerLbl;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton selectAllBtn;
    private javax.swing.JComboBox semesterCB;
    private javax.swing.JButton unselectAllBtn;
    private javax.swing.JPanel venueJPanel;
    // End of variables declaration//GEN-END:variables

}
