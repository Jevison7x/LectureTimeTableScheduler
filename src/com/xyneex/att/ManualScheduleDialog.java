/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xyneex.att;

import com.xyneex.att.beans.Course;
import com.xyneex.att.beans.Day;
import com.xyneex.att.beans.Period;
import com.xyneex.att.beans.Schedule;
import com.xyneex.att.beans.Venue;
import com.xyneex.att.courses.CoursesDAO;
import com.xyneex.att.departments.Department;
import com.xyneex.att.util.ScheduleClashingException;
import com.xyneex.att.util.WindowsSetter;
import com.xyneex.att.venues.VenueDAO;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Jevison7x
 */
public class ManualScheduleDialog extends javax.swing.JDialog
{
    private Course[] courses;

    private Venue[] venues;

    public ManualScheduleDialog(MainFrame parent) throws ClassNotFoundException, IOException, SQLException
    {
        super(parent, true);
        this.initDefaultData(parent.getDepartment());
        this.initComponents();
        this.centralizeWindow();
    }

    private void initDefaultData(Department department) throws SQLException, IOException, ClassNotFoundException
    {
        //Get all courses
        List<Course> coursesList = CoursesDAO.getCoursesBySemester(department);
        Collections.sort(coursesList);
        this.courses = new Course[coursesList.size()];
        this.courses = coursesList.toArray(this.courses);

        //Get all venues
        List<Venue> venuesList = VenueDAO.getAllVenues();
        Collections.sort(venuesList);
        this.venues = new Venue[venuesList.size()];
        this.venues = venuesList.toArray(this.venues);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        titleLbl = new javax.swing.JLabel();
        courseCodeLbl = new javax.swing.JLabel();
        coursesCB = new javax.swing.JComboBox(this.courses);
        venueLbl = new javax.swing.JLabel();
        venueCB = new javax.swing.JComboBox(this.venues);
        timePeriodLbl = new javax.swing.JLabel();
        timePeriodCB = new javax.swing.JComboBox(Period.STR_PERIODS);
        dayLbl = new javax.swing.JLabel();
        dayCB = new javax.swing.JComboBox(Day.STR_DAYS);
        fixScheduleBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/xyneex/att/icons/Male_cartoon_pointing_to_white_board_32.png"))); // NOI18N
        titleLbl.setText("Manual Lecture Schedule");

        courseCodeLbl.setText("Course Code:");

        venueLbl.setText("Venue:");

        timePeriodLbl.setText("Time Period:");

        dayLbl.setText("Day:");

        fixScheduleBtn.setText("Fix Schedule");
        fixScheduleBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fixScheduleBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(courseCodeLbl)
                            .addComponent(venueLbl)
                            .addComponent(timePeriodLbl)
                            .addComponent(dayLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(venueCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(coursesCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timePeriodCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dayCB, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(fixScheduleBtn)
                        .addGap(78, 78, 78)
                        .addComponent(cancelBtn)))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelBtn, fixScheduleBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseCodeLbl)
                    .addComponent(coursesCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(venueLbl)
                    .addComponent(venueCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timePeriodLbl)
                    .addComponent(timePeriodCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fixScheduleBtn)
                    .addComponent(cancelBtn))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelBtnActionPerformed
    {//GEN-HEADEREND:event_cancelBtnActionPerformed
        if(evt.getSource() == this.cancelBtn)
            this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void fixScheduleBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fixScheduleBtnActionPerformed
    {//GEN-HEADEREND:event_fixScheduleBtnActionPerformed
        if(evt.getSource() == this.fixScheduleBtn)
        {
            Course course = (Course)this.coursesCB.getSelectedItem();
            Venue venue = (Venue)this.venueCB.getSelectedItem();
            String strTimePeriod = this.timePeriodCB.getSelectedItem().toString();
            String strDay = this.dayCB.getSelectedItem().toString();
            Schedule schedule = new Schedule();
            schedule.setCourse(course);
            schedule.setVenue(venue);
            MainFrame mainFrame = (MainFrame)this.getParent();
            try
            {
                mainFrame.addFixedSchedule(schedule, strDay, strTimePeriod);
                mainFrame.setNotSaved(true);
                this.dispose();
            }
            catch(ScheduleClashingException | IllegalArgumentException xcp)
            {
                if(xcp instanceof ScheduleClashingException)
                {
                    ScheduleClashingException sce = (ScheduleClashingException)xcp;
                    int errorCode = sce.getErrorCode();
                    if(errorCode == ScheduleClashingException.CLASHING_YEAR_OF_STUDY)
                    {
                        Schedule schedule1 = sce.getSchedule();
                        mainFrame.autoSubstitution(strDay, strTimePeriod, schedule1, schedule);
                        this.dispose();
                    }
                    else
                    {
                        Toolkit.getDefaultToolkit().beep();
                        JOptionPane.showMessageDialog(this, xcp.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else
                {
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(this, xcp.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_fixScheduleBtnActionPerformed

    private void centralizeWindow()
    {
        WindowsSetter.centralizeWindow(this);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel courseCodeLbl;
    private javax.swing.JComboBox coursesCB;
    private javax.swing.JComboBox dayCB;
    private javax.swing.JLabel dayLbl;
    private javax.swing.JButton fixScheduleBtn;
    private javax.swing.JComboBox timePeriodCB;
    private javax.swing.JLabel timePeriodLbl;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JComboBox venueCB;
    private javax.swing.JLabel venueLbl;
    // End of variables declaration//GEN-END:variables

}
